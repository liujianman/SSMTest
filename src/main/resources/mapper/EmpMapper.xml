<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.SSMTest.dao.EmpDao">
    <!-- Emp的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Emp_Map" type="com.SSMTest.pojo.Emp">
        <id column="emp_id" property="empId" />
        <result column="emp_name" property="empName" />
        <result column="gender" property="gender" />
        <result column="email" property="email" />
        <result column="d_id" property="dId" />
    </resultMap>

    <!-- 数据库中表名为:tbl_emp的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="tbl_emp_Column">
        tbl_emp.emp_id as emp_id
        ,tbl_emp.emp_name as emp_name
        ,tbl_emp.gender as gender
        ,tbl_emp.email as email
        ,tbl_emp.d_id as d_id
    </sql>

    <!--获得类名为:Emp对应的数据库表的数据总行数 -->
    <select id="getEmpRowCount" resultType="java.lang.Long">
        select count(emp_id) from tbl_emp
    </select>
    <!-- 获得类名为:Emp对应数据库中表的数据集合 -->
    <select id="selectEmp" resultMap="result_Emp_Map">
        select 
        <include refid="tbl_emp_Column" /> 
        from tbl_emp
    </select> 

    <!-- 获得一个Emp对象,以参数Emp对象中不为空的属性作为条件进行查询-->
    <select id="selectEmpByObj" parameterType="com.SSMTest.pojo.Emp" resultMap="result_Emp_Map">
        select 
            <include refid="tbl_emp_Column" /> 
        from tbl_emp
        <where>
            <if test="dId != null "> and tbl_emp.d_id = #{dId}</if>
            <if test="email != null "> and tbl_emp.email = #{email}</if>
            <if test="gender != null "> and tbl_emp.gender = #{gender}</if>
            <if test="empName != null "> and tbl_emp.emp_name = #{empName}</if>
            <if test="empId != null "> and tbl_emp.emp_id = #{empId}</if>
        </where>
    </select> 

    <!-- 通过Emp的id获得对应数据库中表的数据对象-->
    <select id="selectEmpById" parameterType="java.lang.Integer" resultMap="result_Emp_Map">
        select 
            <include refid="tbl_emp_Column" /> 
        from tbl_emp
        where tbl_emp.emp_id = #{id}
    </select> 

    <!-- 将Emp插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertEmp" parameterType="com.SSMTest.pojo.Emp">
        insert into tbl_emp(emp_id,emp_name,gender,email,d_id) 
        values(#{empId},#{empName},#{gender},#{email},#{dId})
    </insert>

    <!-- 将Emp中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyEmp" parameterType="com.SSMTest.pojo.Emp">
        insert into tbl_emp
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="empId != null">emp_id,</if>
            <if test="empName != null">emp_name,</if>
            <if test="gender != null">gender,</if>
            <if test="email != null">email,</if>
            <if test="dId != null">d_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="empId != null"> #{empId},</if>
            <if test="empName != null"> #{empName},</if>
            <if test="gender != null"> #{gender},</if>
            <if test="email != null"> #{email},</if>
            <if test="dId != null"> #{dId},</if>
        </trim>
    </insert>

    <!-- 通过Emp的id将数据库表中对应的数据删除-->
    <delete id="deleteEmpById" parameterType="java.lang.Integer">
        delete from tbl_emp
        where emp_id = #{id}
    </delete>

    <!-- 通过Emp的id将Emp的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateEmpById" parameterType="com.SSMTest.pojo.Emp">
        update tbl_emp set
            emp_name=#{empName}
            ,gender=#{gender}
            ,email=#{email}
            ,d_id=#{dId}
        where emp_id=#{empId}
    </update>

    <!-- 通过Emp的id将Emp中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyEmpById" parameterType="com.SSMTest.pojo.Emp">
        update tbl_emp
        <set>
            <if test="empName != null">
                emp_name=#{empName},
            </if>
            <if test="gender != null">
                gender=#{gender},
            </if>
            <if test="email != null">
                email=#{email},
            </if>
            <if test="dId != null">
                d_id=#{dId},
            </if>
        </set>
        where emp_id=#{empId}
    </update>

</mapper>